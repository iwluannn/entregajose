name: ITOps
run-name: ${{ github.actor }} Pipeline deploy 🤷‍♂️
on: 
  push:
    branches:
    - "develop"
    paths-ignore:
    - "*.txt"
jobs:
  githubactions-senai: 
    runs-on: alpine
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: INSTALL PACKAGES 
        run: |
          sudo apt update -y
          sudo apt-get install figlet -y
          echo "luann" | figlet
          curl https://static.snyk.io/cli/latest/snyk-linux -o snyk
          chmod +x ./snyk
          cp ./snyk /usr/local/bin/
      - name: SNYK AUTH
        run: |
          snyk -d auth $SNYK_AUTH_TOKEN
        env:
          SNYK_AUTH_TOKEN: ${{ secrets.SNYK_AUTH_TOKEN }}
      - name: Configurar AWS CLI
        if: always()
        run: |
          echo "AWS CLI" | figlet -f small
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region us-east-1
          export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
          export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
          export AWS_DEFAULT_REGION="us-east-1"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Docker Login
        if: always()
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Docker build (CI)
        if: always()
        run: |
          echo $AWS_ACCESS_KEY_ID
          docker build --build-arg AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID --build-arg AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY --build-arg AWS_DEFAULT_REGION="us-east-1" -t apicontainer .
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          
      - name: Docker Analysis (CI)
        if: always()
        run: |
          echo "VULNERABILIDADES" | figlet -c -f small
          snyk container test apicontainer:latest || true
          
      - name: Docker Push (CD)
        if: always()
        run: |
          COMMIT_SHA=$(echo $GITHUB_SHA | cut -c 1-5)
          echo $COMMIT_SHA
          docker tag apicontainer:latest iwluann/apicontainer:$COMMIT_SHA
          docker push iwluann/apicontainer:$COMMIT_SHA

          name: Deploy EC2 and Start API
          on:
            push:
              branches:
                - main
          jobs:
            deploy:
              runs-on: alpine

            steps:
            - name: Checkout repository
              uses: actions/checkout@v2
      
            - name: Set up Terraform
              uses: hashicorp/setup-terraform@v1
              with:
                terraform_version: 1.0.0
      
            - name: Initialize Terraform
              run: terraform init
      
            - name: Plan Terraform changes
              run: terraform plan
      
            - name: Apply Terraform changes
              run: terraform apply -auto-approve

            - name: Install SSH client
              run: apk add --no-cache openssh-client
              
            - name: Copy SSH private key
              run: echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
              
            - name: SSH into EC2 instance and start API
              run: ssh -i ~/.ssh/id_rsa ec2-user@${{ secrets.EC2_PUBLIC_IP }} 'sudo docker run -d -p 8080:8080 minha-api'

